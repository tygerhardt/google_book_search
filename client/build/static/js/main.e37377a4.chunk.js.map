{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Wrapper/index.js","pages/NoMatch.js","components/Form/index.js","utils/API.js","components/Results/index.js","pages/Search.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Header","Wrapper","props","Object","assign","NoMatch","components_Header","role","aria-label","Form","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","API","getBook","query","axios","get","concat","deleteBook","delete","then","result","data","saveBook","bookData","post","savedBooks","Results","state","handleSave","book","_this","map","_id","includes","deletedBook","setState","filter","catch","err","console","error","savedBook","_this2","this","_this3","books","length","key","alt","title","src","image","authors","description","href","link","target","Component","Search","makeBook","volumeInfo","imageLinks","thumbnail","previewLink","searchBook","res","items","event","defineProperty","preventDefault","components_Form","components_Results","React","Saved","App","NavBar","components_Wrapper","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4UAoCeA,MA/Bf,WACI,OAGIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,8BAEIH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,GAAG,UACHF,UAAwC,YAA7BG,OAAOC,SAASC,SAAyB,kBAAoB,YAF5E,WAKJR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACjBC,GAAG,UACHF,UAAwC,YAA7BG,OAAOC,SAASC,SAAyB,kBAAoB,YAFvD,QAIzBR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,GAAG,SACHF,UAAwC,WAA7BG,OAAOC,SAASC,SAAwB,kBAAoB,YAF3E,oBCVTC,MAXf,WACI,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,2BCDDQ,MAJf,SAAiBC,GACf,OAAOX,EAAAC,EAAAC,cAAA,OAAAU,OAAAC,OAAA,CAAMV,UAAU,WAAcQ,KCexBG,MAff,WACE,OACEd,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMc,KAAK,MAAMC,aAAW,gCAA5B,kCCkBCC,MAxBf,SAAcP,GACd,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,UAASnB,EAAAC,EAAAC,cAAA,wCACxBF,EAAAC,EAAAC,cAAA,SACEkB,SAAUT,EAAMU,kBAChBC,MAAOX,EAAMY,OACbC,KAAK,SACLC,KAAK,OACLtB,UAAU,eACVuB,YAAY,gBACZC,GAAG,WAEL3B,EAAAC,EAAAC,cAAA,UAAQ0B,QAASjB,EAAMkB,iBAAkB1B,UAAU,qDAAnD,+BChBS2B,EAAA,CACbC,QAAS,SAAUC,GACjB,OAAOC,IAAMC,IAAN,iDAAAC,OAA2DH,KAGpEI,WAAY,SAAUT,GACpB,OAAOM,IAAMI,OAAO,cAAgBV,GAAIW,KAAK,SAAAC,GAAM,OAAIA,EAAOC,QAGhEC,SAAU,SAAUC,GAClB,OAAOT,IAAMU,KAAK,aAAcD,GAAUJ,KAAK,SAAAC,GAAM,OAAIA,EAAOC,QAGlEI,WAAY,WACV,OAAOX,IAAMC,IAAI,cAAcI,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SCgD1CK,oNA1DXC,MAAQ,CACJF,WAAY,MAShBG,WAAa,SAAAC,GAELC,EAAKH,MAAMF,WAAWM,IAAI,SAAAF,GAAI,OAAIA,EAAKG,MAAKC,SAASJ,EAAKG,KAC1DrB,EAAIM,WAAWY,EAAKG,KACfb,KAAK,SAAAe,GAAW,OAAIJ,EAAKK,SAAS,CAAEV,WAAYK,EAAKH,MAAMF,WAAWW,OAAO,SAAAP,GAAI,OAAIA,EAAKG,MAAQE,EAAYF,UAC9GK,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,KAEhC3B,EAAIW,SAASO,GACRV,KAAK,SAAAsB,GAAS,OAAIX,EAAKK,SAAS,CAAEV,WAAYK,EAAKH,MAAMF,WAAWT,OAAO,CAACyB,QAC5EJ,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,yFAfpB,IAAAI,EAAAC,KAChBhC,EAAIc,aACCN,KAAK,SAAAM,GAAU,OAAIiB,EAAKP,SAAS,CAAEV,WAAYA,MAC/CY,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,sCAgB3B,IAAAM,EAAAD,KACL,OACI9D,EAAAC,EAAAC,cAAA,WACM4D,KAAKnD,MAAMqD,MAAMC,OAGXjE,EAAAC,EAAAC,cAAA,WACK4D,KAAKnD,MAAMqD,MAAMd,IAAI,SAAAX,GAAM,OACxBvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY+D,IAAK3B,EAAOY,KACnCnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKiE,IAAK5B,EAAO6B,MAAOjE,UAAU,YAAYkE,IAAK9B,EAAO+B,SAE9DtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoC,EAAO6B,MAAnC,OAA8C7B,EAAOgC,SACrDvE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoC,EAAOiC,aACjCxE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGuE,KAAMlC,EAAOmC,KAAMvE,UAAU,uCAAuCwE,OAAO,UAA9E,QACA3E,EAAAC,EAAAC,cAAA,UAAQ0B,QAAS,kBAAMmC,EAAKhB,WAAWR,IAASpC,UAAU,qDACrD4D,EAAKjB,MAAMF,WAAWM,IAAI,SAAAF,GAAI,OAAIA,EAAKG,MAAKC,SAASb,EAAOY,KAAO,SAAW,gBAhBnHnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,iCA7BEyE,cC0DPC,6MAxDX/B,MAAQ,CACJxB,MAAO,GACP0C,MAAO,MAOXc,SAAW,SAAApC,GACP,MAAO,CACHS,IAAKT,EAASf,GACdyC,MAAO1B,EAASqC,WAAWX,MAC3BG,QAAS7B,EAASqC,WAAWR,QAC7BC,YAAa9B,EAASqC,WAAWP,YACjCF,MAAO5B,EAASqC,WAAWC,WAAWC,UACtCP,KAAMhC,EAASqC,WAAWG,gBAIlCC,WAAa,SAAAnD,GACTF,EAAIC,QAAQC,GACPM,KAAK,SAAA8C,GAAG,OAAInC,EAAKK,SAAS,CAAEU,MAAOoB,EAAI5C,KAAK6C,MAAMnC,IAAI,SAAAR,GAAQ,OAAIO,EAAK6B,SAASpC,SAChFc,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAGpCpC,kBAAoB,SAAAiE,GAChB,IAAM9D,EAAO8D,EAAMX,OAAOnD,KACpBF,EAAQgE,EAAMX,OAAOrD,MAC3B2B,EAAKK,SAAL1C,OAAA2E,EAAA,EAAA3E,CAAA,GACKY,EAAOF,OAIhBO,iBAAmB,SAAAyD,GACfA,EAAME,iBACNvC,EAAKkC,WAAWlC,EAAKH,MAAMvB,4FA9B3BuC,KAAKqB,8CAkCL,OACInF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuF,EAAD,CACIlE,OAAQuC,KAAKhB,MAAMvB,OACnBF,kBAAmByC,KAAKzC,kBACxBQ,iBAAkBiC,KAAKjC,mBAE3B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACwF,EAAD,CAAS1B,MAAOF,KAAKhB,MAAMkB,iBAlD1B2B,IAAMf,WCoBZgB,6MApBX9C,MAAQ,CACJF,WAAY,uFAGI,IAAAiB,EAAAC,KAChBhC,EAAIc,aACCN,KAAK,SAAAM,GAAU,OAAIiB,EAAKP,SAAS,CAAEV,WAAYA,MAC/CY,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,sCAIhC,OACIzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACwF,EAAD,CAAS1B,MAAOF,KAAKhB,MAAMF,qBAfvBgC,aC4BLiB,0LAjBX,OACE7F,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4F,EAAD,MACA9F,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAAC6F,EAAD,KACE/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjC7E,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWtB,IACvC7E,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWP,IACtC5F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWrF,cAZlC8D,cCAEwB,QACa,cAA7B9F,OAAOC,SAAS8F,UAEe,UAA7B/F,OAAOC,SAAS8F,UAEhB/F,OAAOC,SAAS8F,SAASC,MACvB,2DCbRC,IAASC,OAAOxG,EAAAC,EAAAC,cAACuG,EAAD,MAASC,SAASC,eAAe,SD4HzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxE,KAAK,SAAAyE,GACjCA,EAAaC","file":"static/js/main.e37377a4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n\nfunction Navbar() {\n    return (\n\n\n        <nav className=\"navbar navbar-expand-lg text-dark\">\n            <div className=\"container\">\n                powered by Google Books API\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/search\"\n                            className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n                        >Search</Link>\n                    </li>\n                    <li className=\"nav-item\"><Link\n                            to=\"/search\"\n                            className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n                        > | </Link></li>\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/saved\"\n                            className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                        >Saved</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport style from \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className=\"jumbotron text-center\">\n            <div className=\"container text-black\">\n                <h1>Book Vault</h1>\n               \n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport Header from \"../components/Header\";\n\nfunction NoMatch() {\n  return (\n    <div>\n          <Header>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                ðŸ™„\n              </span>\n            </h1>\n          </Header>\n    </div>\n  );\n}\n\nexport default NoMatch;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Form(props){\nreturn (\n  <div className=\"container\">\n  <form>\n    <div className=\"form-group\">\n      <label htmlFor=\"search\"><h2>Search by title or author</h2></label>\n      <input\n        onChange={props.handleInputChange}\n        value={props.search}\n        name=\"search\"\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Search a Book\"\n        id=\"search\"\n      />\n      <button onClick={props.handleFormSubmit} className=\"btn badge-pill btn-outline-warning mt-3 ml-3 btn2\">\n        Search\n        </button>\n    </div>\n  </form>\n  </div>\n);\n}\n\nexport default Form;","import axios from \"axios\";\n\nexport default {\n  getBook: function (query) {\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n  },\n  \n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id).then(result => result.data);\n  },\n  \n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData).then(result => result.data);\n  },\n  \n  savedBooks: function () {\n    return axios.get(\"/api/books\").then(result => result.data);\n  }\n};","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Results extends Component {\n\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    handleSave = book => {\n\n        if (this.state.savedBooks.map(book => book._id).includes(book._id)) {\n            API.deleteBook(book._id)\n                .then(deletedBook => this.setState({ savedBooks: this.state.savedBooks.filter(book => book._id !== deletedBook._id) }))\n                .catch(err => console.error(err));\n        } else {\n            API.saveBook(book)\n                .then(savedBook => this.setState({ savedBooks: this.state.savedBooks.concat([savedBook]) }))\n                .catch(err => console.error(err));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.props.books.length ? (\n                    <h2 className=\"text-center\">No Results to Display</h2>\n                ) : (\n                        <div>\n                            {this.props.books.map(result => (\n                                <div className=\"card mb-3\" key={result._id}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-2\">\n                                            <img alt={result.title} className=\"img-fluid\" src={result.image} />\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div className=\"card-body cardBody2\">\n                                                <h5 className=\"card-title\">{result.title} by {result.authors}</h5>\n                                                <p className=\"card-text\">{result.description}</p>\n                                                <div>\n                                                    <a href={result.link} className=\"btn badge-pill btn-outline-dark mt-3\" target=\"_blank\" >View</a>\n                                                    <button onClick={() => this.handleSave(result)} className=\"btn badge-pill btn-outline-warning mt-3 ml-3 btn2\" >\n                                                        {this.state.savedBooks.map(book => book._id).includes(result._id) ? \"Unsave\" : \"Save\"}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\n\nclass Search extends React.Component {\n    state = {\n        value: \"\",\n        books: []\n    };\n\n    componentDidMount() {\n        this.searchBook();\n    }\n\n    makeBook = bookData => {\n        return {\n            _id: bookData.id,\n            title: bookData.volumeInfo.title,\n            authors: bookData.volumeInfo.authors,\n            description: bookData.volumeInfo.description,\n            image: bookData.volumeInfo.imageLinks.thumbnail,\n            link: bookData.volumeInfo.previewLink\n        }\n    }\n\n    searchBook = query => {\n        API.getBook(query)\n            .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n            .catch(err => console.error(err));\n    };\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchBook(this.state.search);\n    };\n\n    render() {\n        return (\n            <div>\n                <Form\n                    search={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <div className=\"container\">\n                    <h2>Results</h2>\n                    <Results books={this.state.books} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Results from \"../components/Results\";\n\nclass Saved extends Component {\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Saved books</h2>\n                <Results books={this.state.savedBooks} />\n            </div>\n        )\n    }\n}\n\nexport default Saved;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport NoMatch from \"./pages/NoMatch\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n \n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <Header />\n          <Wrapper>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/noMatch\" component={NoMatch} />\n          </Wrapper>\n        </div>\n      </Router>\n    )\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}